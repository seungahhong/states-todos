{"version":3,"sources":["reduxToolkit/components/TodosContentItemComponent.tsx","reduxToolkit/states/constants/index.ts","reduxToolkit/services/index.tsx","reduxToolkit/states/features/index.ts","reduxToolkit/containers/TodoContentContainer.tsx","reduxToolkit/states/saga/index.ts","reduxToolkit/states/store/index.ts","reduxToolkit/containers/RootContainer.tsx","recoil/services/index.jsx","recoil/states/constants/index.ts","recoil/states/atoms/index.ts","recoil/components/TodosContentItemComponent.tsx","recoil/containers/TodoContentContainer.tsx","recoil/containers/RootContainer.tsx","react-query/constants/index.ts","react-query/services/index.jsx","react-query/hooks/useTodo.js","react-query/components/TodosContentItemComponent.jsx","react-query/containers/TodoContentContainer.jsx","react-query/containers/RootContainer.jsx","swr/services/index.jsx","swr/hooks/useTodo.js","swr/components/TodosContentItemComponent.jsx","swr/containers/TodoContentContainer.jsx","swr/containers/RootContainer.jsx","redux/components/TodosContentItemComponent.tsx","redux/constants/index.ts","redux/services/index.jsx","redux/states/actions/index.ts","redux/states/selectors/index.ts","redux/containers/TodoContentContainer.tsx","redux/states/reducers/index.ts","redux/states/reducers/todos.ts","redux/states/store/configureStore.ts","redux/states/store/index.ts","redux/containers/RootContainer.tsx","mobx/services/index.jsx","mobx/states/stores/TodosStore.ts","mobx/components/TodosContentItemComponent.tsx","mobx/containers/TodoContentContainer.tsx","mobx/containers/RootContainer.tsx","jotai/services/index.jsx","jotai/states/constants/index.ts","jotai/states/atoms/index.ts","jotai/components/TodosContentItemComponent.tsx","jotai/containers/TodoContentContainer.tsx","jotai/containers/RootContainer.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["TodosContentItemComponent","userId","id","title","completed","type","checked","onChange","defaultProps","FETCH_TODO","FETCH_TODO_SAGA","FETCH_TODO_SAGA_SUCCESS","FETCH_TODO_SAGA_ERROR","CREATE_TODO","UPDATE_TODO","DELETE_TODO","fetchTodo","a","axios","get","createTodo","todo","params","post","updateTodo","put","deleteTodo","delete","getTodoItemLengthState","createSelector","state","todos","todoItem","length","fetchTodoSagaAsyncAction","createAction","payload","createAsyncAction","fetchAsyncTodoAction","createAsyncThunk","args","thunkAPI","data","Array","isArray","concat","createAsyncTodoAction","updateAsyncTodoAction","deleteAsyncTodoAction","rejectWithValue","loadingReducerCb","loading","message","fulfilledReducerCb","rejectedReducerCb","createSlice","name","initialState","reducers","extraReducers","action","error","map","filter","pending","fulfilled","rejected","TodoContentContainer","props","useSelector","shallowEqual","todoLength","dispatch","useDispatch","useState","fetchNumber","setFetchNumber","updateNumber","setUpdateNumber","deleteNumber","setDeleteNumber","useEffect","onFetchChange","useCallback","e","target","Number","value","onUpdateChange","onDeleteChange","color","height","width","style","background","onClick","event","request","undefined","margin","border","evetn","connect","React","memo","prev","curr","fetchAsyncSagaTodoAction","todoSaga","call","success","isAxiosError","failure","takeEvery","saga","sagaMiddleware","createSagaMiddleware","all","fork","store","configureStore","reducer","middleware","getDefaultMiddleware","logger","run","getState","ErrorFallback","resetErrorBoundary","role","RootContainer","FallbackComponent","TodoItemAtom","atom","key","default","fetchState","createState","updateState","deleteState","fetchAsyncTodosAction","selector","response","set","newValue","todoListFilterState","filteredTodoListState","todoItemLengthState","useRecoilState","todoItems","setTodoItemAtom","setTodoFilter","filterItems","useRecoilValue","fetchTodoAction","useSetRecoilState","createTodoAction","updateTodoAction","deleteTodoAction","item","handleCallbackFetchTodoAction","useRecoilCallback","snapshot","getPromise","fallback","GET_URL","POST_URL","useFetchTodo","suspense","useQuery","fetchTodos","useErrorBoundary","useMemo","isLoading","setTodoItem","filterRef","useRef","number","queryClient","useQueryClient","todosData","current","createMutation","useMutation","onSuccess","setQueriesData","invalidateQueries","mutate","QueryClient","client","fetcher","useSWR","response1","FETCH_TODO_REQUEST","FETCH_TODO_SUCCESS","FETCH_TODO_ERROR","fetchTodoActionSuccess","fetchTodoActionRequest","fetchTodoActionError","stores","createReducer","produce","draft","rootReducers","combineReducers","createStore","rootReducer","applyMiddleware","thunkMiddleware","TodosStore","bound","makeObservable","this","then","fetchTodoSuccess","bind","fetchTodoError","res","observable","runInAction","flow","computed","inject","observer","todosStore","setState","handleFetchTodosAction","fetchAsyncRunInActionTodoAction","handleFetchTodoAction","fetchAsyncFlowTodoAction","Component","fetchAsyncJotaiWithReactQueryTodoAction","atomWithQuery","queryKey","queryFn","selectAtom","useAtom","useAtomValue","todoItemsWithReactQuery","useUpdateAtom","App","className","to","path","component","ReduxToolKitContainer","ReduxContainer","MobxContainer","RecoilContainer","ReactQueryContainer","SWRContainer","JotaiContainer","from","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.70778553.chunk.js","sourcesContent":["import React from \"react\";\nimport { TodoItemProps } from './types/todos';\n\nconst TodosContentItemComponent = ({ \n  userId, \n  id, \n  title, \n  completed\n}: TodoItemProps) => (\n  <div>\n    <input type=\"checkbox\" checked={completed} onChange={() => {}} />\n    <span>UserId: {userId} | </span>\n    <span>Title: {title} | </span>\n    <span>ID: {id}</span>\n  </div>\n); \n\nTodosContentItemComponent.defaultProps = {\n  completed: false,\n  title: '',\n};\n\nexport default TodosContentItemComponent;","// action todo type\nexport const FETCH_TODO = 'FETCH_TODO' as const;\nexport const FETCH_ASYNC_TODO = 'FETCH_ASYNC_TODO' as const;\n\nexport const FETCH_TODO_SAGA = 'FETCH_TODO_SAGA' as const;\nexport const FETCH_TODO_SAGA_SUCCESS = 'FETCH_TODO_SAGA_SUCCESS' as const;\nexport const FETCH_TODO_SAGA_ERROR = 'FETCH_TODO_SAGA_ERROR' as const;\n\n// action todo type\nexport const CREATE_TODO = 'CREATE_TODO' as const;\nexport const CREATE_ASYNC_TODO = 'CREATE_ASYNC_TODO' as const;\n\n// action update type\nexport const UPDATE_TODO = 'UPDATE_TODO' as const;\nexport const UPDATE_ASYNC_TODO = 'UPDATE_ASYNC_TODO' as const;\n\n// action delete type\nexport const DELETE_TODO = 'DELETE_TODO' as const;\nexport const DELETE_ASYNC_TODO = 'DELETE_ASYNC_TODO'as const;\n","import axios from \"axios\";\nimport { TodoItem } from \"../types\";\n\nexport const fetchTodo = async (id: undefined | number) => {\n  return await axios.get<TodoItem | TodoItem[]>(\n    `https://jsonplaceholder.typicode.com/todos${id ? \"/\" + id : \"\"}`\n  );\n};\n\nexport const createTodo = (todo: TodoItem) => {\n  const params = {\n    ...todo,\n  };\n\n  return axios.post<TodoItem>(\"https://jsonplaceholder.typicode.com/posts\", params);\n};\n\nexport const updateTodo = (id: undefined | number, todo: TodoItem) => {\n  const params = {\n    ...todo,\n  };\n\n  return axios.put<TodoItem>(`https://jsonplaceholder.typicode.com/posts/${id}`, params);\n};\n\nexport const patchTodo = (id: undefined | number, todo: TodoItem) => {\n  const params = {\n    ...todo,\n  };\n\n  return axios.patch<TodoItem>(\n    `https://jsonplaceholder.typicode.com/posts/${id}`,\n    params\n  );\n};\n\nexport const deleteTodo = (id: undefined | number) => {\n  return axios.delete<TodoItem>(`https://jsonplaceholder.typicode.com/posts/${id}`);\n};\n","// ducks pattern 구조\nimport {\n  Draft,\n  Selector,\n  createSlice, // handleActions 대체\n  createAction,\n  createSelector,\n  createAsyncThunk,  // redux-thunk 수신 간소화\n  PayloadAction,\n} from \"@reduxjs/toolkit\";\nimport {\n  FETCH_TODO,\n  FETCH_ASYNC_TODO,\n  CREATE_TODO,\n  CREATE_ASYNC_TODO,\n  UPDATE_TODO,\n  UPDATE_ASYNC_TODO,\n  DELETE_TODO,\n  DELETE_ASYNC_TODO,\n  FETCH_TODO_SAGA,\n  FETCH_TODO_SAGA_SUCCESS,\n  FETCH_TODO_SAGA_ERROR,\n} from '../constants';\nimport {\n  fetchTodo,\n  createTodo,\n  deleteTodo,\n  updateTodo,\n} from '../../services';\nimport { TodoItemState, TodoState, RootState } from '../types';\nimport { AxiosError } from \"axios\";\nimport { createAsyncAction } from \"typesafe-actions\";\nimport { TodoItem } from \"../../types\";\n\n/**\n * createSelector\n */\nconst getTodo = (state: RootState) => state.todos;\nexport const getTodoItemLengthState: Selector<RootState, number> = createSelector(\n  getTodo,\n  (state: TodoState) => state.todoItem.length,\n)\n\n// createActions이 없어서 createAction으로 대체\nexport const fetchTodoAction = createAction(FETCH_TODO, (todoItem: TodoItemState[]) => ({ payload: { todoItem }}));\nexport const createTodoAction = createAction(CREATE_TODO, (todoItem: TodoItemState[]) => ({ payload: { todoItem }}));\nexport const updateTodoAction = createAction(UPDATE_TODO, (id: number, todoItem: TodoItemState[]) => ({ payload: { id, todoItem }}));\nexport const deleteTodoAction = createAction(DELETE_TODO, (id: number) => ({ payload: id }));\n\n// redux-saga 호출을 위한 action 함수 지정\nexport const fetchTodoSagaAsyncAction = createAsyncAction(\n  FETCH_TODO_SAGA,\n  FETCH_TODO_SAGA_SUCCESS,\n  FETCH_TODO_SAGA_ERROR\n)<undefined | number, TodoItemState[], AxiosError>();\n\n// createActions이 없어서 createAction으로 대체\nexport const fetchAsyncTodoAction = createAsyncThunk(FETCH_ASYNC_TODO, async (args: number | undefined, thunkAPI) => {\n  const { data: todoItem } = await fetchTodo(args);\n\n  // const { dispatch } = thunkAPI;\n  // dispatch(fetchTodoAction(Array.isArray(todoItem) ? todoItem : [].concat(todoItem)));\n  return {\n    todoItem: Array.isArray(todoItem) ? todoItem : ([] as TodoItem[]).concat(todoItem),\n  };\n});\n\nexport const createAsyncTodoAction = createAsyncThunk(CREATE_ASYNC_TODO, async (args: TodoItemState, thunkAPI) => {\n  const { data: todoItem } = await createTodo(args);\n\n  // const { dispatch } = thunkAPI;\n  // dispatch(createTodoAction(todoItem));\n  return {\n    todoItem,\n  };\n});\n\nexport const updateAsyncTodoAction = createAsyncThunk(UPDATE_ASYNC_TODO, async (args: { id: number, todoItem: TodoItemState }, thunkAPI) => {\n  const { id, todoItem } = args;\n  const { data } = await updateTodo(id, todoItem);\n\n  // dispatch(updateTodoAction(id, data));\n\n  return {\n    id,\n    data,\n  };\n});\n\nexport const deleteAsyncTodoAction = createAsyncThunk(DELETE_ASYNC_TODO, async (args: number, thunkAPI) => {\n  try {\n    await deleteTodo(args);\n\n    // const { dispatch } = thunkAPI;\n    // dispatch(deleteTodoAction(args));\n    return {\n      id: args,\n    };\n  } catch (error) {\n    const { rejectWithValue } = thunkAPI;\n    return rejectWithValue(error);\n  }\n});\n\n// reducer, immer 내장\nconst initialState: TodoState = {\n  todoItem: [],\n  loading: false,\n  message: '',\n};\n\nconst loadingReducerCb = (state: Draft<TodoState>) => {\n  // 호출전\n  state.loading = true;\n  state.message = '';\n};\n\nconst fulfilledReducerCb = (state: Draft<TodoState>, todoItem: TodoItemState[]) => {\n  // 성공\n  state.loading = false;\n  state.todoItem = todoItem;\n  state.message = '성공했습니다...';\n};\n\nconst rejectedReducerCb = (state: Draft<TodoState>) => {\n  // 실패\n  state.loading = false;\n  state.todoItem = [];\n  state.message = '실패했습니다...';\n};\n\n// redux-actions handleActions 내장\nconst todos = createSlice({\n  name: 'todos',\n  initialState,\n  reducers: { }, // key값으로 정의한 이름으로 자동으로 액션함수 생성\n  extraReducers: { // 사용자가 정의한 이름의 액션함수가 생성\n    [FETCH_TODO_SAGA]: (state: Draft<TodoState>) => {\n      state.loading = true;\n      state.message = '';\n    },\n    [FETCH_TODO_SAGA_SUCCESS]: (state: Draft<TodoState>, action: PayloadAction<TodoItemState[]>) => {\n      state.loading = false;\n      state.todoItem = action.payload;\n      state.message = '성공했습니다...';\n    },\n    [FETCH_TODO_SAGA_ERROR]: (state: Draft<TodoState>, error: AxiosError) => {\n      state.loading = false;\n      state.todoItem = [];\n      state.message = '실패했습니다...';\n    },\n    [FETCH_TODO]: (state: Draft<TodoState>, action) => {\n      state.todoItem = action.payload.todoItem;\n    },\n    [CREATE_TODO]: (state: Draft<TodoState>, action) => {\n      state.todoItem = state.todoItem.concat(action.payload.todoItem);\n    },\n    [UPDATE_TODO]: (state: Draft<TodoState>, action) => {\n      state.todoItem = state.todoItem.map(todo => todo.id !== action.payload.todoItem.id ? todo : action.payload.todoItem);\n    },\n    [DELETE_TODO]: (state: Draft<TodoState>, action) => {\n      state.todoItem = state.todoItem.filter(todo => todo.id !== action.payload);\n    },\n    [fetchAsyncTodoAction.pending.type]: loadingReducerCb,\n    [createAsyncTodoAction.pending.type]: loadingReducerCb,\n    [updateAsyncTodoAction.pending.type]: loadingReducerCb,\n    [deleteAsyncTodoAction.pending.type]: loadingReducerCb,\n\n    [fetchAsyncTodoAction.fulfilled.type]: (state, action) => fulfilledReducerCb(state,  action.payload.todoItem),\n    [createAsyncTodoAction.fulfilled.type]: (state, action) => fulfilledReducerCb(state, state.todoItem.concat(action.payload.todoItem)),\n    [updateAsyncTodoAction.fulfilled.type]: (state, action) => fulfilledReducerCb(state, state.todoItem.map(todo => todo.id !== action.payload.id ? todo : action.payload.data)),\n    [deleteAsyncTodoAction.fulfilled.type]: (state, action) => fulfilledReducerCb(state, state.todoItem.filter(todo => todo.id !== action.payload.id)),\n\n    [fetchAsyncTodoAction.rejected.type]: rejectedReducerCb,\n    [createAsyncTodoAction.rejected.type]: rejectedReducerCb,\n    [updateAsyncTodoAction.rejected.type]: rejectedReducerCb,\n    [deleteAsyncTodoAction.rejected.type]: rejectedReducerCb,\n  },\n});\n\nexport default todos.reducer;\n","import React, { useCallback, useEffect, useState } from \"react\";\nimport { useSelector, useDispatch, shallowEqual, connect } from \"react-redux\";\nimport ReactLoading from \"react-loading\";\n\nimport TodosContentItemComponent from \"../components/TodosContentItemComponent\";\nimport {\n  TypedThunkDispath,\n  RootState,\n  RootDispatch,\n  TodoState,\n} from \"../states/types\";\nimport {\n  createAsyncTodoAction,\n  deleteAsyncTodoAction,\n  fetchAsyncTodoAction,\n  fetchTodoSagaAsyncAction,\n  getTodoItemLengthState,\n  updateAsyncTodoAction,\n} from \"../states/features\";\n\nconst TodoContentContainer = (props: RootState) => {\n  // const { todoItem, loading, message } : TodoState = useSelector(\n  //   ( state: RootState ) => ({\n  //     todoItem: props.todos.todoItem,\n  //     loading: props.todos.loading,\n  //     message: props.todos.message,\n  //   }),\n  //   shallowEqual\n  // );\n  const { todoItem, loading }: TodoState = useSelector(\n    (state: RootState) => props.todos,\n    shallowEqual\n  );\n  const todoLength = useSelector(getTodoItemLengthState);\n  const dispatch = useDispatch<RootDispatch>();\n  const [fetchNumber, setFetchNumber] = useState(1);\n  const [updateNumber, setUpdateNumber] = useState(1);\n  const [deleteNumber, setDeleteNumber] = useState(1);\n\n  useEffect(() => {\n    (dispatch as TypedThunkDispath)(fetchAsyncTodoAction());\n  }, [dispatch]);\n\n  const handleFetchTodosSagaAction = (\n    event: React.MouseEvent<HTMLButtonElement>\n  ) => dispatch(fetchTodoSagaAsyncAction.request(undefined));\n  const handleFetchTodoSagaAction = (\n    event: React.MouseEvent<HTMLButtonElement>\n  ) => dispatch(fetchTodoSagaAsyncAction.request(fetchNumber));\n  const handleFetchTodosAction = (event: React.MouseEvent<HTMLButtonElement>) =>\n    dispatch(fetchAsyncTodoAction());\n  const handleFetchTodoAction = (evetn: React.MouseEvent<HTMLButtonElement>) =>\n    dispatch(fetchAsyncTodoAction(fetchNumber));\n  const handleCreateTodoAction = (event: React.MouseEvent<HTMLButtonElement>) =>\n    dispatch(\n      createAsyncTodoAction({\n        userId: 2,\n        title: \"create\",\n        completed: false,\n      })\n    );\n  const handleUpdateTodoAction = (event: React.MouseEvent<HTMLButtonElement>) =>\n    dispatch(\n      updateAsyncTodoAction({\n        id: updateNumber,\n        todoItem: {\n          id: updateNumber,\n          userId: updateNumber,\n          title: \"update\",\n          completed: false,\n        },\n      })\n    );\n  const handleDeteleTodoAciton = (event: React.MouseEvent<HTMLButtonElement>) =>\n    dispatch(deleteAsyncTodoAction(deleteNumber));\n\n  const onFetchChange = useCallback(\n    (e: React.ChangeEvent<HTMLInputElement>) => {\n      const { target } = e;\n      setFetchNumber(Number(target.value));\n    },\n    []\n  );\n\n  const onUpdateChange = useCallback(\n    (e: React.ChangeEvent<HTMLInputElement>) => {\n      const { target } = e;\n      setUpdateNumber(Number(target.value));\n    },\n    []\n  );\n\n  const onDeleteChange = useCallback(\n    (e: React.ChangeEvent<HTMLInputElement>) => {\n      const { target } = e;\n      setDeleteNumber(Number(target.value));\n    },\n    []\n  );\n\n  return (\n    <>\n      {loading && <ReactLoading color={\"#00b2b2\"} height={50} width={50} />}\n      <div>길이: {todoLength}</div>\n      <div>\n        <button\n          style={{ background: \"#e7f9f9\" }}\n          onClick={handleFetchTodosAction}\n        >\n          Todos All Loading\n        </button>\n      </div>\n      <div>\n        <button\n          style={{ background: \"#e7f9f9\" }}\n          onClick={handleFetchTodosSagaAction}\n        >\n          Todos Saga All Loading\n        </button>\n      </div>\n      <hr\n        style={{\n          margin: \"3px\",\n          border: \"1px solid black\",\n        }}\n      />\n      <label>Todo Fetch : </label>\n      <input type=\"number\" value={fetchNumber} onChange={onFetchChange} />\n      <div>\n        <button\n          style={{ background: \"#e7f9f9\" }}\n          onClick={handleFetchTodoAction}\n        >\n          Todo Loading\n        </button>\n      </div>\n      <div>\n        <button\n          style={{ background: \"#e7f9f9\" }}\n          onClick={handleFetchTodoSagaAction}\n        >\n          Todo Saga Loading\n        </button>\n      </div>\n      <hr\n        style={{\n          margin: \"3px\",\n          border: \"1px solid black\",\n        }}\n      />\n      <div>\n        <button\n          style={{ background: \"#e7f9f9\" }}\n          onClick={handleCreateTodoAction}\n        >\n          Create Todo\n        </button>\n      </div>\n      <hr\n        style={{\n          margin: \"3px\",\n          border: \"1px solid black\",\n        }}\n      />\n      <label>Todo Update : </label>\n      <input type=\"number\" value={updateNumber} onChange={onUpdateChange} />\n      <div>\n        <button\n          style={{ background: \"#e7f9f9\" }}\n          onClick={handleUpdateTodoAction}\n        >\n          Update Todo\n        </button>\n      </div>\n      <hr\n        style={{\n          margin: \"3px\",\n          border: \"1px solid black\",\n        }}\n      />\n      <label>Todo Delete : </label>\n      <input type=\"number\" value={deleteNumber} onChange={onDeleteChange} />\n      <div>\n        <button\n          style={{ background: \"#e7f9f9\" }}\n          onClick={handleDeteleTodoAciton}\n        >\n          Delete Todo\n        </button>\n      </div>\n      {!loading &&\n        todoItem &&\n        todoItem.map((todo) => (\n          <TodosContentItemComponent\n            key={todo.id}\n            id={todo.id}\n            userId={todo.userId}\n            title={todo.title}\n            completed={todo.completed}\n          />\n        ))}\n    </>\n  );\n};\n\nconst mapStateToProps = (state: RootState) => state;\n\nexport default connect(mapStateToProps)(\n  React.memo(\n    TodoContentContainer,\n    (prev: RootState, curr: RootState) => prev.todos === curr.todos\n  )\n);\n","import { call, put, takeEvery } from \"redux-saga/effects\";\nimport { FETCH_TODO_SAGA } from \"../constants\";\nimport { fetchTodoSagaAsyncAction } from \"../features\";\nimport { fetchTodo } from \"../../services\";\nimport axios, { AxiosError } from \"axios\";\n\nfunction* fetchAsyncSagaTodoAction(action: ReturnType<typeof fetchTodoSagaAsyncAction.request>) {\n  try {\n    const { data: todoItem } = yield call(fetchTodo, action.payload);\n    yield put(fetchTodoSagaAsyncAction.success(Array.isArray(todoItem) ? todoItem : [].concat(todoItem)));\n  } catch (err: unknown) {\n    if (axios.isAxiosError(err))  {\n      yield put(fetchTodoSagaAsyncAction.failure(err as AxiosError));\n    }\n  }\n}\n\nexport function* todoSaga() {\n  yield takeEvery(FETCH_TODO_SAGA, fetchAsyncSagaTodoAction);\n}\n","import { configureStore } from '@reduxjs/toolkit';\nimport createSagaMiddleware from 'redux-saga';\nimport { all, fork } from 'redux-saga/effects';\nimport logger from 'redux-logger';\nimport { todoSaga } from '../saga';\nimport todos from '../features';\n\nconst sagaMiddleware = createSagaMiddleware();\n\nfunction* saga() {\n  yield all([fork(todoSaga)]);\n}\n\nconst store = configureStore({\n  reducer: {\n    todos: todos,\n  },\n  middleware: (getDefaultMiddleware) => getDefaultMiddleware().concat(logger, sagaMiddleware),\n});\n\nsagaMiddleware.run(saga);\n\nexport const RootState = store.getState;\nexport const RootDispatch = store.dispatch;\n\nexport default store;\n","import React from \"react\";\nimport { Provider } from \"react-redux\";\nimport { ErrorBoundary } from \"react-error-boundary\";\nimport TodoContentContainer from \"./TodoContentContainer\";\n\nimport store from \"../states/store\";\n\ninterface FallbackProps {\n  error: Error;\n  resetErrorBoundary: (...args: Array<unknown>) => void;\n}\n\nconst ErrorFallback = ({ error, resetErrorBoundary }: FallbackProps) => {\n  return (\n    <div role=\"alert\">\n      <p>Something went wrong:</p>\n      <pre>{error.message}</pre>\n      <button onClick={resetErrorBoundary}>Try again</button>\n    </div>\n  );\n};\n\nfunction RootContainer() {\n  return (\n    <ErrorBoundary FallbackComponent={ErrorFallback}>\n      <Provider store={store}>\n        <TodoContentContainer />\n      </Provider>\n    </ErrorBoundary>\n  );\n}\n\nexport default RootContainer;\n","import axios from \"axios\";\n\nexport const fetchTodo = async (id) => {\n  return await axios.get(\n    `https://jsonplaceholder.typicode.com/todos${id ? \"/\" + id : \"\"}`\n  );\n};\n\nexport const createTodo = (todo) => {\n  const params = {\n    ...todo,\n  };\n\n  return axios.post(\"https://jsonplaceholder.typicode.com/posts\", params);\n};\n\nexport const updateTodo = (id, todo) => {\n  const params = {\n    ...todo,\n  };\n\n  return axios.put(`https://jsonplaceholder.typicode.com/posts/${id}`, params);\n};\n\nexport const patchTodo = (id, todo) => {\n  const params = {\n    ...todo,\n  };\n\n  return axios.patch(\n    `https://jsonplaceholder.typicode.com/posts/${id}`,\n    params\n  );\n};\n\nexport const deleteTodo = (id) => {\n  return axios.delete(`https://jsonplaceholder.typicode.com/posts/${id}`);\n};\n","// action todo type\nexport const FETCH_TODOS = 'FETCH_TODOS' as const;\n\nexport const FETCH_TODO = 'FETCH_TODO' as const;\nexport const FETCH_ASYNC_TODO = 'FETCH_ASYNC_TODO' as const;\n\n// action todo type\nexport const CREATE_TODO = 'CREATE_TODO' as const;\nexport const CREATE_ASYNC_TODO = 'CREATE_ASYNC_TODO' as const;\n\n// action update type\nexport const UPDATE_TODO = 'UPDATE_TODO' as const;\nexport const UPDATE_ASYNC_TODO = 'UPDATE_ASYNC_TODO' as const;\n\n// action delete type\nexport const DELETE_TODO = 'DELETE_TODO' as const;\nexport const DELETE_ASYNC_TODO = 'DELETE_ASYNC_TODO'as const;\n","import { atom, selector } from 'recoil';\nimport { deleteTodo } from '../../../reduxToolkit/services';\nimport { createTodo, fetchTodo, updateTodo } from '../../services';\nimport { CREATE_TODO, DELETE_TODO, FETCH_TODO, UPDATE_TODO } from '../constants';\nimport { TodoState } from '../types';\n\nconst initialState: TodoState = {\n    data: [],\n    loading: false,\n    message: '',\n};\n\nexport const TodoItemAtom = atom<TodoState>({\n    key: 'TodoItemState',\n    default: initialState,\n});\n\nexport const fetchState = atom<number>({\n    key: 'fetchState',\n    default: 1,\n});\n\nexport const createState = atom<any>({\n    key: 'createState',\n    default: {}\n});\n\nexport const updateState = atom<any>({\n    key: 'updateState',\n    default: {},\n});\n\nexport const deleteState = atom<number>({\n    key: 'deleteState',\n    default: 1,\n});\n\n\n// get all todos api\nexport const fetchAsyncTodosAction = selector<any>({\n    key: 'fetchAsyncTodosAction',\n    get: async ({get}) => {\n        const { data: todoItem } = await fetchTodo();\n       return  todoItem;\n    },\n});\n\nexport const fetchAsyncTodoAction = selector<any>({\n    key: 'fetchAsyncTodoAction',\n    get: async ({get}) => {\n        const response = await fetchTodo(get(fetchState));\n        return [].concat(response.data);\n    },\n    set: ({set}, newValue) => {\n        set(fetchState, Number(newValue));\n    }\n});\n\nexport const createAsyncTodoAction = selector<any>({\n    key: 'createAsyncTodoAction',\n    get: async ({get}) => {\n        const response = await createTodo(get(createState));\n        return [].concat(response.data);\n    },\n    set: ({set}, newValue) => {\n        set(createState, newValue);\n    }\n});\n\nexport const updateAsyncTodoAction = selector<any>({\n    key: 'updateAsyncTodoAction',\n    get: async ({get}) => {\n        const { id, todoItem } = get(updateState);\n        const response = await updateTodo(id, todoItem);\n        return {\n            id,\n            data: response.data,\n        };\n    },\n    set: ({set}, newValue) => {\n        set(updateState, newValue);\n    }\n});\n\nexport const deleteAsyncTodoAction = selector<any>({\n    key: 'deleteAsyncTodoAction',\n    get: async ({get}) => {\n        await deleteTodo(get(deleteState));\n        return deleteState;\n    },\n    set: ({set}, newValue) => {\n        set(deleteState, newValue);\n    }\n});\n\nexport const todoListFilterState = atom({\n    key: 'todoListFilterState',\n    default: 'FETCH_TODOS',\n});\n\nexport const filteredTodoListState = selector<any>({\n    key: 'filteredTodoListState',\n    get: ({get}) => {\n      const filter = get(todoListFilterState);\n      switch (filter) {\n        case FETCH_TODO:\n          return get(fetchAsyncTodoAction);\n        case CREATE_TODO:\n          return get(createAsyncTodoAction);\n        case UPDATE_TODO:\n          return get(updateAsyncTodoAction);  \n        case DELETE_TODO:\n          return get(deleteAsyncTodoAction);\n        default:\n          return get(fetchAsyncTodosAction);\n      }\n    },\n});\n\nexport const todoItemLengthState = selector({\n    key: 'todoItemLengthState',\n    get: ({get}) => {\n      const todoList = get(TodoItemAtom);\n      return todoList.data.length;\n    },\n});\n  \n","import React from \"react\";\nimport { TodoItemProps } from './types/todos';\n\nconst TodosContentItemComponent = ({ \n  userId, \n  id, \n  title, \n  completed\n}: TodoItemProps) => (\n  <div>\n    <input type=\"checkbox\" checked={completed} onChange={() => {}} />\n    <span>UserId: {userId} | </span>\n    <span>Title: {title} | </span>\n    <span>ID: {id}</span>\n  </div>\n); \n\nTodosContentItemComponent.defaultProps = {\n  completed: false,\n  title: '',\n};\n\nexport default TodosContentItemComponent;","import React, { useCallback, useEffect, useState } from \"react\";\nimport {\n  useRecoilCallback,\n  useRecoilState,\n  useRecoilValue,\n  useSetRecoilState,\n} from \"recoil\";\nimport {\n  TodoItemAtom,\n  fetchAsyncTodoAction,\n  createAsyncTodoAction,\n  deleteAsyncTodoAction,\n  filteredTodoListState,\n  todoListFilterState,\n  updateAsyncTodoAction,\n  todoItemLengthState,\n} from \"../states/atoms\";\nimport TodosContentItemComponent from \"../components/TodosContentItemComponent\";\nimport {\n  FETCH_TODOS,\n  FETCH_TODO,\n  CREATE_TODO,\n  UPDATE_TODO,\n  DELETE_TODO,\n} from \"../states/constants\";\nimport { TodoItem } from \"../types\";\n\nconst TodoContentContainer = () => {\n  const [{ data: todoItems }, setTodoItemAtom] = useRecoilState(TodoItemAtom);\n  const [filter, setTodoFilter] = useRecoilState(todoListFilterState);\n  const filterItems = useRecoilValue(filteredTodoListState);\n\n  const fetchTodoAction = useSetRecoilState(fetchAsyncTodoAction);\n  const createTodoAction = useSetRecoilState(createAsyncTodoAction);\n  const updateTodoAction = useSetRecoilState(updateAsyncTodoAction);\n  const deleteTodoAction = useSetRecoilState(deleteAsyncTodoAction);\n\n  const todoLength = useRecoilValue(todoItemLengthState);\n\n  const [fetchNumber, setFetchNumber] = useState(1);\n  const [updateNumber, setUpdateNumber] = useState(1);\n  const [deleteNumber, setDeleteNumber] = useState(1);\n\n  useEffect(() => {\n    switch (filter) {\n      case FETCH_TODOS:\n      case FETCH_TODO:\n        setTodoItemAtom((prev) => ({\n          ...prev,\n          data: filterItems,\n        }));\n        break;\n      case CREATE_TODO:\n        setTodoItemAtom((prev) => ({\n          ...prev,\n          data: [...prev.data, ...filterItems],\n        }));\n        break;\n      case UPDATE_TODO:\n        setTodoItemAtom((prev) => ({\n          ...prev,\n          data: prev.data.map((todo) =>\n            todo.id !== filterItems.id ? todo : filterItems.data\n          ),\n        }));\n        break;\n      case DELETE_TODO:\n        setTodoItemAtom((prev) => ({\n          ...prev,\n          data: prev.data.filter((item) => item.id !== filterItems),\n        }));\n        break;\n    }\n  }, [filter, filterItems, setTodoItemAtom]);\n\n  const handleFetchTodosAction = (\n    event: React.MouseEvent<HTMLButtonElement>\n  ) => {\n    setTodoFilter(\"FETCH_TODOS\");\n  };\n\n  const handleCallbackFetchTodoAction = useRecoilCallback(\n    ({ snapshot, set }) =>\n      async () => {\n        const todos = (await snapshot.getPromise(\n          fetchAsyncTodoAction\n        )) as TodoItem[];\n\n        set(TodoItemAtom, (prev) => ({\n          ...prev,\n          data: todos,\n        }));\n      },\n    [fetchNumber, fetchAsyncTodoAction, TodoItemAtom, fetchTodoAction]\n  );\n\n  const handleFetchTodoAction = (\n    event: React.MouseEvent<HTMLButtonElement>\n  ) => {\n    fetchTodoAction(fetchNumber);\n    setTodoFilter(\"FETCH_TODO\");\n  };\n\n  const handleCreateTodoAction = (\n    event: React.MouseEvent<HTMLButtonElement>\n  ) => {\n    createTodoAction({\n      userId: 2,\n      title: \"create\",\n      completed: false,\n    });\n    setTodoFilter(\"CREATE_TODO\");\n  };\n\n  const handleUpdateTodoAction = (\n    event: React.MouseEvent<HTMLButtonElement>\n  ) => {\n    updateTodoAction({\n      id: updateNumber,\n      todoItem: {\n        id: updateNumber,\n        userId: updateNumber,\n        title: \"update\",\n        completed: false,\n      },\n    });\n    setTodoFilter(\"UPDATE_TODO\");\n  };\n\n  const handleDeleteTodoAction = (\n    event: React.MouseEvent<HTMLButtonElement>\n  ) => {\n    deleteTodoAction(deleteNumber);\n    setTodoFilter(\"DELETE_TODO\");\n  };\n\n  const onFetchChange = useCallback(\n    (e: React.ChangeEvent<HTMLInputElement>) => {\n      const { target } = e;\n      setFetchNumber(Number(target.value));\n    },\n    []\n  );\n\n  const onUpdateChange = useCallback(\n    (e: React.ChangeEvent<HTMLInputElement>) => {\n      const { target } = e;\n      setUpdateNumber(Number(target.value));\n    },\n    []\n  );\n\n  const onDeleteChange = useCallback(\n    (e: React.ChangeEvent<HTMLInputElement>) => {\n      const { target } = e;\n      setDeleteNumber(Number(target.value));\n    },\n    []\n  );\n\n  return (\n    <>\n      <div>길이: {todoLength}</div>\n      <div>\n        <button\n          style={{ background: \"#e7f9f9\" }}\n          onClick={handleFetchTodosAction}\n        >\n          Todos All Loading\n        </button>\n      </div>\n      <hr\n        style={{\n          margin: \"3px\",\n          border: \"1px solid black\",\n        }}\n      />\n      <label>Todo Fetch : </label>\n      <input type=\"number\" value={fetchNumber} onChange={onFetchChange} />\n      <div>\n        <button\n          style={{ background: \"#e7f9f9\" }}\n          onClick={handleFetchTodoAction}\n        >\n          Todo Loading\n        </button>\n      </div>\n      <div>\n        <button\n          style={{ background: \"#e7f9f9\" }}\n          onClick={handleCallbackFetchTodoAction}\n        >\n          Todo Callback Loading\n        </button>\n      </div>\n      <hr\n        style={{\n          margin: \"3px\",\n          border: \"1px solid black\",\n        }}\n      />\n      <div>\n        <button\n          style={{ background: \"#e7f9f9\" }}\n          onClick={handleCreateTodoAction}\n        >\n          Create Todo\n        </button>\n      </div>\n      <hr\n        style={{\n          margin: \"3px\",\n          border: \"1px solid black\",\n        }}\n      />\n      <label>Todo Update : </label>\n      <input type=\"number\" value={updateNumber} onChange={onUpdateChange} />\n      <div>\n        <button\n          style={{ background: \"#e7f9f9\" }}\n          onClick={handleUpdateTodoAction}\n        >\n          Update Todo\n        </button>\n      </div>\n      <hr\n        style={{\n          margin: \"3px\",\n          border: \"1px solid black\",\n        }}\n      />\n      <label>Todo Delete : </label>\n      <input type=\"number\" value={deleteNumber} onChange={onDeleteChange} />\n      <div>\n        <button\n          style={{ background: \"#e7f9f9\" }}\n          onClick={handleDeleteTodoAction}\n        >\n          Delete Todo\n        </button>\n      </div>\n      {todoItems &&\n        todoItems.map((todo) => (\n          <TodosContentItemComponent\n            key={todo.id}\n            id={todo.id}\n            userId={todo.userId}\n            title={todo.title}\n            completed={todo.completed}\n          />\n        ))}\n    </>\n  );\n};\n\nexport default TodoContentContainer;\n","import React, { Suspense } from 'react';\nimport { RecoilRoot } from 'recoil';\nimport { ErrorBoundary } from 'react-error-boundary';\nimport ReactLoading from 'react-loading';\nimport TodoContentContainer from './TodoContentContainer';\n\ninterface FallbackProps {\n  error: Error;\n  resetErrorBoundary: (...args: Array<unknown>) => void;\n}\n\nconst ErrorFallback = ({error, resetErrorBoundary}: FallbackProps) => {\n  return (\n    <div role=\"alert\">\n      <p>Something went wrong:</p>\n      <pre>{error.message}</pre>\n      <button onClick={resetErrorBoundary}>Try again</button>\n    </div>\n  )\n};\n\nfunction RootContainer() {\n  return (\n    <ErrorBoundary FallbackComponent={ErrorFallback}>\n      <Suspense fallback={<ReactLoading color={'#00b2b2'} height={50} width={50} />}>\n        <RecoilRoot>\n          <TodoContentContainer />\n        </RecoilRoot>\n      </Suspense>\n    </ErrorBoundary>\n  );\n}\n\nexport default RootContainer;\n","export const GET_URL = 'https://jsonplaceholder.typicode.com/todos';\nexport const POST_URL = 'https://jsonplaceholder.typicode.com/posts';","import axios from \"axios\";\nimport { GET_URL, POST_URL } from \"../constants\";\n\nexport const fetcher = (args) => {\n  return axios.get(args);\n};\n\nexport const fetchTodos = (id) => `${GET_URL}${id ? `/${id}` : \"\"}`;\n\nexport const createTodo = (todo) => {\n  const params = {\n    ...todo,\n  };\n\n  return axios.post(`${POST_URL}`, params);\n};\n\nexport const updateTodo = (id, todo) => {\n  const params = {\n    ...todo,\n  };\n\n  return axios.put(`${POST_URL}/${id}`, params);\n};\n\nexport const patchTodo = (id, todo) => {\n  const params = {\n    ...todo,\n  };\n\n  return axios.patch(`${POST_URL}/${id}`, params);\n};\n\nexport const deleteTodo = (id) => {\n  return axios.delete(`${POST_URL}/${id}`);\n};\n","import { useQuery } from \"react-query\";\nimport { fetcher, fetchTodos } from \"../services\";\nimport { GET_URL } from \"../constants\";\nimport { useMemo } from \"react\";\n\nexport const useFetchTodo = ({ id, suspense }) => {\n  const { data, error } = useQuery(\n    [GET_URL, id],\n    () => fetcher(fetchTodos(id)),\n    {\n      suspense: !!suspense,\n      useErrorBoundary: true,\n    }\n  );\n\n  const todoLength = useMemo(() => {\n    return Array.isArray(data?.data) ? data?.data?.length : 1;\n  }, [data]);\n\n  return {\n    data,\n    todoLength,\n    isLoading: !data && !error,\n    error,\n  };\n};\n","import React from \"react\";\n\nconst TodosContentItemComponent = ({ \n  userId, \n  id, \n  title, \n  completed\n}) => (\n  <div>\n    <input type=\"checkbox\" checked={completed} onChange={() => {}} />\n    <span>UserId: {userId} | </span>\n    <span>Title: {title} | </span>\n    <span>ID: {id}</span>\n  </div>\n); \n\nTodosContentItemComponent.defaultProps = {\n  userId: 0,\n  id: 0, \n  completed: false,\n  title: '',\n};\n\nexport default TodosContentItemComponent;","import React, { useCallback, useEffect, useRef, useState } from \"react\";\nimport { useMutation, useQueryClient } from \"react-query\";\n\nimport { GET_URL } from \"../constants\";\nimport { useFetchTodo } from \"../hooks/useTodo\";\nimport TodosContentItemComponent from \"../components/TodosContentItemComponent\";\nimport { createTodo } from \"../services\";\n\nconst TodoContentContainer = () => {\n  // const { data: response } = useQuery(['todos'], fetchTodos, { suspense: true, useErrorBoundary: true });\n  // const { data: response1 } = useQuery(['todo1'], fetchTodo1, { suspense: true, useErrorBoundary: true });\n  const [fetchNumber, setFetchNumber] = useState(1);\n  const [todoItem, setTodoItem] = useState([]);\n  const filterRef = useRef({\n    type: \"FETCH_TODOS\",\n    number: 1,\n  });\n  const queryClient = useQueryClient();\n  const todosData = useFetchTodo({\n    id: filterRef.current.type !== \"FETCH_TODOS\" && filterRef.current.number,\n    suspense: true,\n  }); // error에 대해서 옵션 선택 없이 errorboundary로 처리가능\n  const createMutation = useMutation(createTodo, {\n    onSuccess: (data) => {\n      filterRef.current = {\n        type: \"CREATE_TODO\",\n        number: fetchNumber,\n      };\n      queryClient.setQueriesData([GET_URL, fetchNumber], data);\n    },\n  });\n\n  // const todosData = useFetchTodo({ id: fetchNumber, suspense: true }); // error에 대해서 옵션 선택 없이 errorboundary로 처리가능\n\n  // const [ updateNumber, setUpdateNumber ] = useState(1);\n  // const [ deleteNumber, setDeleteNumber ] = useState(1);\n\n  useEffect(() => {\n    setTodoItem(\n      Array.isArray(todosData.data?.data)\n        ? todosData.data?.data\n        : [].concat(todosData.data?.data)\n    );\n  }, [todosData.data.data]);\n\n  const handleFetchTodosAction = (event) => {\n    filterRef.current.type = \"FETCH_TODOS\";\n    queryClient.invalidateQueries([GET_URL]);\n  };\n\n  const handleFetchTodoAction = (event) => {\n    filterRef.current = {\n      type: \"FETCH_TODO\",\n      number: fetchNumber,\n    };\n    queryClient.invalidateQueries([GET_URL]);\n  };\n  const handleCreateTodoAction = (event) => {\n    createMutation.mutate({\n      userId: fetchNumber,\n      title: \"create\",\n      completed: false,\n    });\n  };\n  // const handleUpdateTodoAction = (event: React.MouseEvent<HTMLButtonElement>) => dispatch(updateAsyncTodoAction({\n  //   id: updateNumber,\n  //   todoItem: {\n  //     'id': updateNumber,\n  //     'userId': updateNumber,\n  //     'title': 'update',\n  //     'completed': false,\n  //   },\n  // }));\n  // const handleDeteleTodoAciton = (event: React.MouseEvent<HTMLButtonElement>) => dispatch(deleteAsyncTodoAction(deleteNumber));\n\n  const onFetchChange = useCallback((event) => {\n    const { target } = event;\n    setFetchNumber(Number(target.value));\n  }, []);\n\n  // const onUpdateChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n  //   const { target } = e;\n  //   setUpdateNumber(Number(target.value));\n  // }, []);\n\n  // const onDeleteChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n  //   const { target } = e;\n  //   setDeleteNumber(Number(target.value));\n  // }, []);\n\n  return (\n    <>\n      <div>길이: {todosData?.todoLength}</div>\n      <div>\n        <button\n          style={{ background: \"#e7f9f9\" }}\n          onClick={handleFetchTodosAction}\n        >\n          Todos All Loading\n        </button>\n      </div>\n      <hr\n        style={{\n          margin: \"3px\",\n          border: \"1px solid black\",\n        }}\n      />\n      <label>Todo Fetch : </label>\n      <input type=\"number\" value={fetchNumber} onChange={onFetchChange} />\n      <div>\n        <button\n          style={{ background: \"#e7f9f9\" }}\n          onClick={handleFetchTodoAction}\n        >\n          Todo Loading\n        </button>\n      </div>\n      <hr\n        style={{\n          margin: \"3px\",\n          border: \"1px solid black\",\n        }}\n      />\n      <div>\n        <button\n          style={{ background: \"#e7f9f9\" }}\n          onClick={handleCreateTodoAction}\n        >\n          Create Todo\n        </button>\n      </div>\n      <hr\n        style={{\n          margin: \"3px\",\n          border: \"1px solid black\",\n        }}\n      />\n      {/* <label>Todo Update : </label><input type=\"number\" value={updateNumber} onChange={onUpdateChange} />\n      <div>\n        <button style={{ background: '#e7f9f9' }} onClick={handleUpdateTodoAction}>Update Todo</button>\n      </div>\n      <hr \n        style={{\n          margin: '3px',\n          border: '1px solid black',\n        }}\n      />\n      <label>Todo Delete : </label><input type=\"number\" value={deleteNumber} onChange={onDeleteChange} />\n      <div>\n        <button style={{ background: '#e7f9f9' }} onClick={handleDeteleTodoAciton}>Delete Todo</button>\n      </div> */}\n      {todoItem.map((todo) => (\n        <TodosContentItemComponent\n          key={todo.id}\n          id={todo.id}\n          userId={todo.userId}\n          title={todo.title}\n          completed={todo.completed}\n        />\n      ))}\n    </>\n  );\n};\n\nexport default TodoContentContainer;\n","import React, { Suspense } from 'react';\nimport { ErrorBoundary } from 'react-error-boundary';\nimport ReactLoading from 'react-loading';\nimport TodoContentContainer from './TodoContentContainer';\nimport { QueryClient, QueryClientProvider } from \"react-query\";\n\nconst queryClient = new QueryClient(); \n\n\nconst ErrorFallback = ({error, resetErrorBoundary}) => {\n  return (\n    <div role=\"alert\">\n      <p>Something went wrong:</p>\n      <pre>{error.message}</pre>\n      <button onClick={resetErrorBoundary}>Try again</button>\n    </div>\n  )\n};\n\nfunction RootContainer() {\n  return (\n    <ErrorBoundary FallbackComponent={ErrorFallback}>\n      <Suspense fallback={<ReactLoading color={'#00b2b2'} height={50} width={50} />}>\n        <QueryClientProvider client={queryClient}>\n          <TodoContentContainer />\n        </QueryClientProvider>\n      </Suspense>\n    </ErrorBoundary>\n  );\n}\n\nexport default RootContainer;\n","import axios from \"axios\";\nexport const fetcher = (...args) => axios.get(...args);\n\nexport const fetchTodos = (id) =>\n  `https://jsonplaceholder.typicode.com/todos${id ? `/${id}` : \"\"}`;\n","import useSWR from \"swr\";\nimport { fetcher, fetchTodos } from \"../services\";\n\nexport const useFetchTodo = ({ id, suspense } ) => {\n  const { data, error } = useSWR(fetchTodos(id), fetcher, { suspense: !!suspense });\n\n  return {\n    data,\n    isLoading: !data && !error,\n    error,\n  }\n}","import React from \"react\";\n\nconst TodosContentItemComponent = ({ \n  userId, \n  id, \n  title, \n  completed\n}) => (\n  <div>\n    <input type=\"checkbox\" checked={completed} onChange={() => {}} />\n    <span>UserId: {userId} | </span>\n    <span>Title: {title} | </span>\n    <span>ID: {id}</span>\n  </div>\n); \n\nTodosContentItemComponent.defaultProps = {\n  userId: 0,\n  id: 0, \n  completed: false,\n  title: '',\n};\n\nexport default TodosContentItemComponent;","import React from \"react\";\nimport { useFetchTodo } from \"../hooks/useTodo\";\nimport TodosContentItemComponent from \"../components/TodosContentItemComponent\";\n\nconst TodoContentContainer = () => {\n  // const { data: response, error, isLoading } = useFetchTodo();\n  const { data: response } = useFetchTodo({ suspense: true }); // error에 대해서 옵션 선택 없이 errorboundary로 처리가능\n  const { data: response1 } = useFetchTodo({ id: 1, suspense: true }); // error에 대해서 옵션 선택 없이 errorboundary로 처리가능\n  // if (isLoading) return <div>loading...</div>;\n  // if (error) return <div>error....</div>;\n\n  return (\n    <>\n      {response1?.data && (\n        <TodosContentItemComponent\n          key={response1?.data?.id}\n          id={response1?.data?.id}\n          userId={response1?.data?.userId}\n          title={response1?.data?.title}\n          completed={response1?.data?.completed}\n        />\n      )}\n      {response?.data?.map((todo) => (\n        <TodosContentItemComponent\n          key={todo.id}\n          id={todo.id}\n          userId={todo.userId}\n          title={todo.title}\n          completed={todo.completed}\n        />\n      ))}\n    </>\n  );\n};\n\nTodoContentContainer.propTypes = {};\n\nTodoContentContainer.defaultProps = {};\n\nexport default TodoContentContainer;\n","import React, { Suspense } from 'react';\nimport { ErrorBoundary } from 'react-error-boundary';\nimport ReactLoading from 'react-loading';\nimport TodoContentContainer from './TodoContentContainer';\nimport { QueryClient, QueryClientProvider } from \"react-query\";\n\nconst queryClient = new QueryClient(); \n\n\nconst ErrorFallback = ({error, resetErrorBoundary}) => {\n  return (\n    <div role=\"alert\">\n      <p>Something went wrong:</p>\n      <pre>{error.message}</pre>\n      <button onClick={resetErrorBoundary}>Try again</button>\n    </div>\n  )\n};\n\nfunction RootContainer() {\n  return (\n    <ErrorBoundary FallbackComponent={ErrorFallback}>\n      <Suspense fallback={<ReactLoading color={'#00b2b2'} height={50} width={50} />}>\n        <QueryClientProvider client={queryClient}>\n          <TodoContentContainer />\n        </QueryClientProvider>\n      </Suspense>\n    </ErrorBoundary>\n  );\n}\n\nexport default RootContainer;\n","import React from \"react\";\nimport { TodoItemProps } from './types/todos';\n\nconst TodosContentItemComponent = ({ \n  userId, \n  id, \n  title, \n  completed\n}: TodoItemProps) => (\n  <div>\n    <input type=\"checkbox\" checked={completed} onChange={() => {}} />\n    <span>UserId: {userId} | </span>\n    <span>Title: {title} | </span>\n    <span>ID: {id}</span>\n  </div>\n); \n\nTodosContentItemComponent.defaultProps = {\n  completed: false,\n  title: '',\n};\n\nexport default TodosContentItemComponent;","// action todo type\nexport const FETCH_TODO_REQUEST = 'FETCH_TODO' as const;\nexport const FETCH_TODO_SUCCESS = 'FETCH_TODO_SUCCESS' as const;\nexport const FETCH_TODO_ERROR = 'FETCH_TODO_ERROR' as const;\nexport const FETCH_ASYNC_TODO = 'FETCH_ASYNC_TODO' as const;\n\n// action todo type\nexport const CREATE_TODO = 'CREATE_TODO' as const;\nexport const CREATE_ASYNC_TODO = 'CREATE_ASYNC_TODO' as const;\n\n// action update type\nexport const UPDATE_TODO = 'UPDATE_TODO' as const;\nexport const UPDATE_ASYNC_TODO = 'UPDATE_ASYNC_TODO' as const;\n\n// action delete type\nexport const DELETE_TODO = 'DELETE_TODO' as const;\nexport const DELETE_ASYNC_TODO = 'DELETE_ASYNC_TODO'as const;\n","import axios from \"axios\";\n\nexport const fetchTodo = async (id) => {\n  return await axios.get(\n    `https://jsonplaceholder.typicode.com/todos${id ? \"/\" + id : \"\"}`\n  );\n};\n\nexport const createTodo = (todo) => {\n  const params = {\n    ...todo,\n  };\n\n  return axios.post(\"https://jsonplaceholder.typicode.com/posts\", params);\n};\n\nexport const updateTodo = (id, todo) => {\n  const params = {\n    ...todo,\n  };\n\n  return axios.put(`https://jsonplaceholder.typicode.com/posts/${id}`, params);\n};\n\nexport const patchTodo = (id, todo) => {\n  const params = {\n    ...todo,\n  };\n\n  return axios.patch(\n    `https://jsonplaceholder.typicode.com/posts/${id}`,\n    params\n  );\n};\n\nexport const deleteTodo = (id) => {\n  return axios.delete(`https://jsonplaceholder.typicode.com/posts/${id}`);\n};\n","import { createAction } from 'typesafe-actions';\nimport { TodoItemState, TypedThunk } from '../store/types';\nimport {\n  FETCH_TODO_REQUEST,\n  FETCH_TODO_SUCCESS,\n  FETCH_TODO_ERROR,\n} from '../../constants';\nimport {\n  fetchTodo,\n} from '../../services';\n\nexport const fetchTodoActionSuccess = createAction(FETCH_TODO_SUCCESS, (todoItem: TodoItemState[]) => ({ todoItem }))();\nexport const fetchTodoActionRequest = createAction(FETCH_TODO_REQUEST)();\nexport const fetchTodoActionError = createAction(FETCH_TODO_ERROR, (error) => ({ error }))();\n\nexport const fetchAsyncTodoAction = (args: number | undefined): TypedThunk => async (dispatch) =>  {\n\n  try {\n    dispatch(fetchTodoActionRequest());\n\n    const { data: todoItem } = await fetchTodo(args);\n    dispatch(fetchTodoActionSuccess(Array.isArray(todoItem) ? todoItem : [].concat(todoItem)));\n  } catch(e) {\n    dispatch(fetchTodoActionError(e));\n  }\n};\n","import { Selector } from 'react-redux';\nimport { createSelector } from 'reselect';\n\nimport { TodoState, RootState } from '../store/types';\n\n/**\n * createSelector\n */\nconst getTodo = (state: RootState) => state.todos;\nexport const getTodoItemLengthState: Selector<RootState, number> = createSelector(\n  getTodo,\n  (state: TodoState) => state.todoItem.length,\n);\n","import React, { useCallback, useEffect, useState } from \"react\";\nimport { useSelector, useDispatch, shallowEqual, connect } from \"react-redux\";\nimport ReactLoading from \"react-loading\";\n\nimport TodosContentItemComponent from \"../components/TodosContentItemComponent\";\nimport {\n  TypedThunkDispath,\n  RootState,\n  RootDispatch,\n  TodoState,\n} from \"../states/store/types\";\nimport { fetchAsyncTodoAction } from \"../states/actions\";\nimport { getTodoItemLengthState } from \"../states/selectors\";\n\nconst TodoContentContainer = (props: RootState) => {\n  // const { todoItem, loading, message } : TodoState = useSelector(\n  //   ( state: RootState ) => ({\n  //     todoItem: props.todos.todoItem,\n  //     loading: props.todos.loading,\n  //     message: props.todos.message,\n  //   }),\n  //   shallowEqual\n  // );\n  const { todoItem, loading }: TodoState = useSelector(\n    (state: RootState) => props.todos,\n    shallowEqual\n  );\n  const todoLength = useSelector(getTodoItemLengthState);\n  const dispatch = useDispatch<RootDispatch>();\n  const [fetchNumber, setFetchNumber] = useState(1);\n\n  useEffect(() => {\n    (dispatch as TypedThunkDispath)(fetchAsyncTodoAction(undefined));\n  }, [dispatch]);\n\n  const handleFetchTodosAction = (event: React.MouseEvent<HTMLButtonElement>) =>\n    (dispatch as TypedThunkDispath)(fetchAsyncTodoAction(undefined));\n  const handleFetchTodoAction = (evetn: React.MouseEvent<HTMLButtonElement>) =>\n    (dispatch as TypedThunkDispath)(fetchAsyncTodoAction(fetchNumber));\n  // const handleCreateTodoAction = (event: React.MouseEvent<HTMLButtonElement>) => dispatch(createAsyncTodoAction({\n  //   'userId': 2,\n  //   'title': 'create',\n  //   'completed': false,\n  // }));\n  // const handleUpdateTodoAction = (event: React.MouseEvent<HTMLButtonElement>) => dispatch(updateAsyncTodoAction({\n  //   id: updateNumber,\n  //   todoItem: {\n  //     'id': updateNumber,\n  //     'userId': updateNumber,\n  //     'title': 'update',\n  //     'completed': false,\n  //   },\n  // }));\n  // const handleDeteleTodoAciton = (event: React.MouseEvent<HTMLButtonElement>) => dispatch(deleteAsyncTodoAction(deleteNumber));\n\n  const onFetchChange = useCallback(\n    (e: React.ChangeEvent<HTMLInputElement>) => {\n      const { target } = e;\n      setFetchNumber(Number(target.value));\n    },\n    []\n  );\n\n  // const onUpdateChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n  //   const { target } = e;\n  //   setUpdateNumber(Number(target.value));\n  // }, []);\n\n  // const onDeleteChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n  //   const { target } = e;\n  //   setDeleteNumber(Number(target.value));\n  // }, []);\n\n  return (\n    <>\n      {loading && <ReactLoading color={\"#00b2b2\"} height={50} width={50} />}\n      <div>길이: {todoLength}</div>\n      <div>\n        <button\n          style={{ background: \"#e7f9f9\" }}\n          onClick={handleFetchTodosAction}\n        >\n          Todos All Loading\n        </button>\n      </div>\n      <hr\n        style={{\n          margin: \"3px\",\n          border: \"1px solid black\",\n        }}\n      />\n      <label>Todo Fetch : </label>\n      <input type=\"number\" value={fetchNumber} onChange={onFetchChange} />\n      <div>\n        <button\n          style={{ background: \"#e7f9f9\" }}\n          onClick={handleFetchTodoAction}\n        >\n          Todo Loading\n        </button>\n      </div>\n      <hr\n        style={{\n          margin: \"3px\",\n          border: \"1px solid black\",\n        }}\n      />\n      {/* <div>\n        <button style={{ background: '#e7f9f9' }} onClick={handleCreateTodoAction}>Create Todo</button>\n      </div>\n      <hr \n        style={{\n          margin: '3px',\n          border: '1px solid black',\n        }}\n      />\n      <label>Todo Update : </label><input type=\"number\" value={updateNumber} onChange={onUpdateChange} />\n      <div>\n        <button style={{ background: '#e7f9f9' }} onClick={handleUpdateTodoAction}>Update Todo</button>\n      </div>\n      <hr \n        style={{\n          margin: '3px',\n          border: '1px solid black',\n        }}\n      />\n      <label>Todo Delete : </label><input type=\"number\" value={deleteNumber} onChange={onDeleteChange} />\n      <div>\n        <button style={{ background: '#e7f9f9' }} onClick={handleDeteleTodoAciton}>Delete Todo</button>\n      </div> */}\n      {!loading &&\n        todoItem &&\n        todoItem.map((todo) => (\n          <TodosContentItemComponent\n            key={todo.id}\n            id={todo.id}\n            userId={todo.userId}\n            title={todo.title}\n            completed={todo.completed}\n          />\n        ))}\n    </>\n  );\n};\n\nconst mapStateToProps = (state: RootState) => state;\n\nexport default connect(mapStateToProps)(\n  React.memo(\n    TodoContentContainer,\n    (prev: RootState, curr: RootState) => prev.todos === curr.todos\n  )\n);\n","import todos from \"./todos\";\n\nconst stores = {\n  todos,\n};\n\nexport default stores;\n","import { createReducer } from 'typesafe-actions';\nimport produce from 'immer';\n\nimport {\n  FETCH_TODO_REQUEST,\n  FETCH_TODO_SUCCESS,\n  FETCH_TODO_ERROR,\n} from '../../constants';\nimport { TodoState, TodoAction } from '../store/types';\n\nconst initialState: TodoState = {\n  todoItem: [],\n  loading: false,\n  message: '',\n};\n\nexport default createReducer<TodoState, TodoAction>(initialState, {\n  [FETCH_TODO_REQUEST]: (state, action) => produce(state, draft => {\n    draft.loading = true;\n  }),\n  [FETCH_TODO_SUCCESS]: (state, action) => produce(state, draft => {\n    draft.loading = false;\n    draft.todoItem = action.payload.todoItem;\n    draft.message = '성공했습니다...';\n  }),\n  [FETCH_TODO_ERROR]: (state, action) => produce(state, draft => {\n    draft.loading = false;\n    draft.todoItem = [];\n    draft.message = '실패했습니다...';\n  }),\n});\n\n","import { combineReducers } from \"redux\";\nimport reducers from \"../reducers\";\n\nconst rootReducers = () => combineReducers({\n  'todos': reducers.todos\n});\n\nexport default rootReducers;\n","import { createStore, applyMiddleware } from 'redux';\nimport thunkMiddleware from 'redux-thunk';\nimport logger from 'redux-logger';\nimport rootReducer from './configureStore';\n\nconst store = () => {\n  const store = createStore(\n    rootReducer(),\n    applyMiddleware(\n      thunkMiddleware,\n      logger,\n    ),\n  );\n  return store;\n};\n\nexport const RootState = store().getState;\nexport const RootDispatch = store().dispatch;\n\nexport default store();\n","import React from 'react';\nimport { Provider } from 'react-redux';\nimport { ErrorBoundary } from 'react-error-boundary';\nimport TodoContentContainer from './TodoContentContainer';\n\nimport store from \"../states/store\";\n\ninterface FallbackProps {\n  error: Error;\n  resetErrorBoundary: (...args: Array<unknown>) => void;\n}\n\nconst ErrorFallback = ({error, resetErrorBoundary}: FallbackProps) => {\n  return (\n    <div role=\"alert\">\n      <p>Something went wrong:</p>\n      <pre>{error.message}</pre>\n      <button onClick={resetErrorBoundary}>Try again</button>\n    </div>\n  )\n};\n\nfunction RootContainer() {\n  return (\n    <ErrorBoundary FallbackComponent={ErrorFallback}>\n      <Provider store={store}>\n        <TodoContentContainer />\n      </Provider>\n    </ErrorBoundary>\n  );\n}\n\nexport default RootContainer;\n","import axios from \"axios\";\n\nexport const fetchTodo = async (id) => {\n  return await axios.get(\n    `https://jsonplaceholder.typicode.com/todos${id ? \"/\" + id : \"\"}`\n  );\n};\n\nexport const createTodo = (todo) => {\n  const params = {\n    ...todo,\n  };\n\n  return axios.post(\"https://jsonplaceholder.typicode.com/posts\", params);\n};\n\nexport const updateTodo = (id, todo) => {\n  const params = {\n    ...todo,\n  };\n\n  return axios.put(`https://jsonplaceholder.typicode.com/posts/${id}`, params);\n};\n\nexport const patchTodo = (id, todo) => {\n  const params = {\n    ...todo,\n  };\n\n  return axios.patch(\n    `https://jsonplaceholder.typicode.com/posts/${id}`,\n    params\n  );\n};\n\nexport const deleteTodo = (id) => {\n  return axios.delete(`https://jsonplaceholder.typicode.com/posts/${id}`);\n};\n","import { AxiosResponse } from \"axios\";\nimport { makeObservable, observable, action, runInAction, flow, computed } from \"mobx\";\nimport {\n  fetchTodo,\n} from '../../services';\n\nexport interface TodoState {\n  todoItem: TodoItemState[],\n  loading: boolean,\n  message: string,\n}\n\nexport interface TodoItem {\n  id?: number,\n  userId: number,\n  title: string,\n  completed: boolean,\n};\n\nexport type TodoItemState = TodoItem;\n\nconst initialState: TodoState = {\n  todoItem: [],\n  loading: false,\n  message: '',\n};\n\nclass TodosStore {\n  @observable store: TodoState = initialState;\n\n  constructor() {\n    makeObservable(this);\n  }\n\n  @action\n  fetchAsyncTodoAction(args: number | undefined) {\n    this.store.loading = true;\n    return fetchTodo(args).then(\n      this.fetchTodoSuccess.bind(this),\n      this.fetchTodoError.bind(this),\n    )\n  }\n\n  @action.bound\n  fetchTodoSuccess(res: AxiosResponse) {\n    const { data : todoItem } = res;\n    this.store.loading = false;\n    this.store.todoItem = Array.isArray(todoItem) ? todoItem : [].concat(todoItem);\n    this.store.message = '성공했습니다...';\n  }\n\n  @action.bound\n  fetchTodoError() {\n    this.store.loading = false;\n    this.store.message = '실패했습니다...';\n  }\n\n  @action\n  fetchAsyncRunInActionTodoAction = async (args: number | undefined) => {\n    try {\n      this.store.loading = true;\n      const res = await fetchTodo(args);\n      runInAction(() => {\n        const { data : todoItem } = res;\n        this.store.loading = false;\n        this.store.todoItem = Array.isArray(todoItem) ? todoItem : [].concat(todoItem);\n        this.store.message = '성공했습니다...';\n      });\n\n    } catch(e) {\n      runInAction(() => {\n        this.store.loading = false;\n        this.store.message = '실패했습니다...';\n      });\n    }\n  }\n\n  @flow\n  *fetchAsyncFlowTodoAction(args: number | undefined) {\n    try {\n      this.store.loading = true;\n      const res: AxiosResponse<TodoItemState[]> = yield fetchTodo(args);\n\n      const { data : todoItem } = res;\n      this.store.loading = false;\n      this.store.todoItem = Array.isArray(todoItem) ? todoItem : ([] as TodoItemState[]).concat(todoItem);\n      this.store.message = '성공했습니다...';\n    } catch(e) {\n      this.store.loading = false;\n      this.store.message = '실패했습니다...';\n    }\n  }\n\n  @computed\n  get getTodoItemLengthState() {\n    return this.store.todoItem.length;\n  }\n}\n\nexport default TodosStore;","import React from \"react\";\nimport { TodoItemProps } from './types/todos';\n\nconst TodosContentItemComponent = ({ \n  userId, \n  id, \n  title, \n  completed\n}: TodoItemProps) => (\n  <div>\n    <input type=\"checkbox\" checked={completed} onChange={() => {}} />\n    <span>UserId: {userId} | </span>\n    <span>Title: {title} | </span>\n    <span>ID: {id}</span>\n  </div>\n); \n\nTodosContentItemComponent.defaultProps = {\n  completed: false,\n  title: '',\n};\n\nexport default TodosContentItemComponent;","import React from \"react\";\nimport { observer, inject } from 'mobx-react';\nimport ReactLoading from 'react-loading';\nimport TodosStore, { TodoItemState } from \"../states/stores/TodosStore\";\n\nimport TodosContentItemComponent from \"../components/TodosContentItemComponent\";\n\ntype TodoStoreProps = {\n  store?: TodosStore;\n}\n\ntype TodoStoreState = {\n  fetchNumber: number;\n}\n\n@inject('store')\n@observer\nclass TodoContentContainer extends React.Component<TodoStoreProps, TodoStoreState> {\n  static defaultProps = { \n    todosStore: TodosStore,\n  };\n\n  todosStore: TodosStore;\n  constructor(props: TodoStoreProps) {\n    super(props);\n\n    this.state = {\n      fetchNumber: 1,\n    }\n\n    this.todosStore = props.store!; // 접미에 붙는 느낌표(!) 연산자인 단언 연산자는 해당 피연산자가 null, undeifned가 아니라고 단언\n  }\n\n  componentDidMount() {\n    this.todosStore.fetchAsyncTodoAction(undefined);\n  }\n\n  onFetchChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const { target } = e;\n    this.setState({\n      fetchNumber: Number(target.value)\n    })\n  };\n\n  handleFetchTodosAction = (event: React.MouseEvent<HTMLButtonElement>) => {\n    this.todosStore.fetchAsyncRunInActionTodoAction(undefined);\n  };\n  \n  handleFetchTodoAction = (event: React.MouseEvent<HTMLButtonElement>) => {\n    this.todosStore.fetchAsyncFlowTodoAction(this.state.fetchNumber);\n  };\n\n  render() {\n    const { store: todosStore, getTodoItemLengthState: todoLength } = this.props.store!;\n    const { fetchNumber } = this.state;\n\n    return (\n      <>\n        {\n          todosStore.loading && <ReactLoading color={'#00b2b2'} height={50} width={50} />\n        }\n        <div>길이: {todoLength}</div>\n        <div>\n          <button style={{ background: '#e7f9f9' }} onClick={this.handleFetchTodosAction}>Todos All Loading</button>\n        </div>\n        <hr \n          style={{\n            margin: '3px',\n            border: '1px solid black',\n          }}\n        />\n        <label>Todo Fetch : </label><input type=\"number\" value={fetchNumber} onChange={this.onFetchChange} />\n        <div>\n          <button style={{ background: '#e7f9f9' }} onClick={this.handleFetchTodoAction}>Todo Loading</button>\n        </div>\n        <hr \n          style={{\n            margin: '3px',\n            border: '1px solid black',\n          }}\n        />\n        {/* <div>\n          <button style={{ background: '#e7f9f9' }} onClick={handleCreateTodoAction}>Create Todo</button>\n        </div>\n        <hr \n          style={{\n            margin: '3px',\n            border: '1px solid black',\n          }}\n        />\n        <label>Todo Update : </label><input type=\"number\" value={updateNumber} onChange={onUpdateChange} />\n        <div>\n          <button style={{ background: '#e7f9f9' }} onClick={handleUpdateTodoAction}>Update Todo</button>\n        </div>\n        <hr \n          style={{\n            margin: '3px',\n            border: '1px solid black',\n          }}\n        />\n        <label>Todo Delete : </label><input type=\"number\" value={deleteNumber} onChange={onDeleteChange} />\n        <div>\n          <button style={{ background: '#e7f9f9' }} onClick={handleDeteleTodoAciton}>Delete Todo</button>\n        </div> */}\n        {\n          (!todosStore.loading && todosStore.todoItem) && todosStore.todoItem.map(\n            (todo: TodoItemState) => \n              <TodosContentItemComponent\n                key={todo.id}\n                id={todo.id}\n                userId={todo.userId}\n                title={todo.title}\n                completed={todo.completed}\n            />)\n        }\n      </>\n    );\n  }\n}\n\nexport default TodoContentContainer;\n","import React from 'react';\nimport { ErrorBoundary } from 'react-error-boundary';\n// import TodoContentContainer from './TodoContentContainer';\n\nimport todosStore from \"../states/stores/TodosStore\";\nimport { observer, Provider } from 'mobx-react';\nimport TodoContentContainer from './TodoContentContainer';\n\ninterface FallbackProps {\n  error: Error;\n  resetErrorBoundary: (...args: Array<unknown>) => void;\n}\n\nconst ErrorFallback = ({error, resetErrorBoundary}: FallbackProps) => {\n  return (\n    <div role=\"alert\">\n      <p>Something went wrong:</p>\n      <pre>{error.message}</pre>\n      <button onClick={resetErrorBoundary}>Try again</button>\n    </div>\n  )\n};\n\n@observer\nclass RootContainer extends React.Component<{}, {}> {\n  private todosStore: todosStore;\n\n  constructor(props: any) {\n    super(props);\n    this.todosStore = new todosStore();\n  }\n\n  render() {\n    return (\n      <ErrorBoundary FallbackComponent={ErrorFallback}>\n        <Provider store={this.todosStore}>\n          <TodoContentContainer />\n        </Provider>\n      </ErrorBoundary>\n    );\n  }\n}\n\nexport default RootContainer;\n","import axios from \"axios\";\n\nexport const fetchTodo = async (id) => {\n  return await axios.get(\n    `https://jsonplaceholder.typicode.com/todos${id ? \"/\" + id : \"\"}`\n  );\n};\n\nexport const createTodo = (todo) => {\n  const params = {\n    ...todo,\n  };\n\n  return axios.post(\"https://jsonplaceholder.typicode.com/posts\", params);\n};\n\nexport const updateTodo = (id, todo) => {\n  const params = {\n    ...todo,\n  };\n\n  return axios.put(`https://jsonplaceholder.typicode.com/posts/${id}`, params);\n};\n\nexport const patchTodo = (id, todo) => {\n  const params = {\n    ...todo,\n  };\n\n  return axios.patch(\n    `https://jsonplaceholder.typicode.com/posts/${id}`,\n    params\n  );\n};\n\nexport const deleteTodo = (id) => {\n  return axios.delete(`https://jsonplaceholder.typicode.com/posts/${id}`);\n};\n","// action todo type\nexport const FETCH_TODOS = 'FETCH_TODOS' as const;\n\nexport const FETCH_TODO = 'FETCH_TODO' as const;\nexport const FETCH_ASYNC_TODO = 'FETCH_ASYNC_TODO' as const;\n\n// action todo type\nexport const CREATE_TODO = 'CREATE_TODO' as const;\nexport const CREATE_ASYNC_TODO = 'CREATE_ASYNC_TODO' as const;\n\n// action update type\nexport const UPDATE_TODO = 'UPDATE_TODO' as const;\nexport const UPDATE_ASYNC_TODO = 'UPDATE_ASYNC_TODO' as const;\n\n// action delete type\nexport const DELETE_TODO = 'DELETE_TODO' as const;\nexport const DELETE_ASYNC_TODO = 'DELETE_ASYNC_TODO'as const;\n","import { atom } from \"jotai\";\nimport { selectAtom } from \"jotai/utils\";\nimport { atomWithQuery } from \"jotai/query\";\nimport { deleteTodo } from \"../../../reduxToolkit/services\";\nimport { createTodo, fetchTodo, updateTodo } from \"../../services\";\nimport {\n  CREATE_TODO,\n  DELETE_TODO,\n  FETCH_TODO,\n  UPDATE_TODO,\n} from \"../constants\";\nimport { TodoState } from \"../types\";\nimport { TodoItem } from \"../../types\";\n\nconst initialState: TodoState = {\n  data: [],\n  loading: false,\n  message: \"\",\n};\n\nexport const TodoItemAtom = atom<TodoState>(initialState);\n\nexport const fetchState = atom<number>(1);\n\nexport const fetchAsyncTodosAction = atom(async (get) => {\n  const response = await fetchTodo();\n  return response.data;\n});\n\nexport const fetchAsyncTodoAction = atom(\n  async (get) => {\n    const response = await fetchTodo(get(fetchState));\n    return [].concat(response.data);\n  },\n  (get, set, payload: number) => {\n    set(fetchState, payload);\n  }\n);\n\n// react-query\nexport const fetchAsyncJotaiWithReactQueryTodoAction = atomWithQuery((get) => ({\n  queryKey: [\"users\", get(fetchState)],\n  queryFn: async ({ queryKey: [, id] }) => {\n    const response = await fetchTodo(id);\n    return [].concat(response.data);\n  },\n}));\n\nexport const createState = atom({});\n\nexport const createAsyncTodoAction = atom(\n  async (get) => {\n    const response = await createTodo(get(createState));\n    return [].concat(response.data);\n  },\n  (get, set, payload: TodoItem) => {\n    set(createState, payload);\n  }\n);\n\nexport const updateState = atom({\n  id: 1,\n  todoItem: {} as TodoItem,\n});\n\nexport const updateAsyncTodoAction = atom(\n  async (get) => {\n    const { id, todoItem } = get(updateState);\n    const response = await updateTodo(id, todoItem);\n    return {\n      id,\n      data: response.data,\n    };\n  },\n  (get, set, payload: any) => {\n    set(updateState, payload);\n  }\n);\n\nexport const deleteState = atom<number>(1);\n\nexport const deleteAsyncTodoAction = atom(\n  async (get) => {\n    const id = get(deleteState);\n    await deleteTodo(id);\n    return id;\n  },\n  (get, set, payload: number) => {\n    set(deleteState, payload);\n  }\n);\n\nexport const todoListFilterState = atom(\"FETCH_TODOS\");\n\nexport const filteredTodoListState = atom((get) => {\n  const filter = get<string>(todoListFilterState);\n  switch (filter) {\n    case FETCH_TODO:\n      return get(fetchAsyncTodoAction);\n    case CREATE_TODO:\n      return get(createAsyncTodoAction);\n    case UPDATE_TODO:\n      return get(updateAsyncTodoAction);\n    case DELETE_TODO:\n      return get(deleteAsyncTodoAction);\n    default:\n      return get(fetchAsyncTodosAction);\n  }\n});\n\nexport const todoItemLengthState = selectAtom(TodoItemAtom, (todoItem) => {\n  return todoItem.data.length;\n});\n","import React from \"react\";\nimport { TodoItemProps } from \"./types/todos\";\n\nconst TodosContentItemComponent = ({\n  userId,\n  id,\n  title,\n  completed,\n}: TodoItemProps) => (\n  <div>\n    <input type=\"checkbox\" checked={completed} onChange={() => {}} />\n    <span>UserId: {userId} | </span>\n    <span>Title: {title} | </span>\n    <span>ID: {id}</span>\n  </div>\n);\n\nTodosContentItemComponent.defaultProps = {\n  completed: false,\n  title: \"\",\n};\n\nexport default TodosContentItemComponent;\n","import React, { useCallback, useEffect, useState } from \"react\";\nimport { useAtom } from \"jotai\";\nimport { useAtomValue, useUpdateAtom } from \"jotai/utils\";\nimport {\n  TodoItemAtom,\n  fetchAsyncTodoAction,\n  createAsyncTodoAction,\n  deleteAsyncTodoAction,\n  filteredTodoListState,\n  todoListFilterState,\n  updateAsyncTodoAction,\n  todoItemLengthState,\n  fetchAsyncJotaiWithReactQueryTodoAction,\n} from \"../states/atoms\";\nimport TodosContentItemComponent from \"../components/TodosContentItemComponent\";\nimport {\n  FETCH_TODOS,\n  FETCH_TODO,\n  CREATE_TODO,\n  UPDATE_TODO,\n  DELETE_TODO,\n} from \"../states/constants\";\nimport { TodoItem } from \"../types\";\n\nconst TodoContentContainer = () => {\n  const [{ data: todoItems }, setTodoItemAtom] = useAtom(TodoItemAtom);\n  const [filter, setTodoFilter] = useAtom(todoListFilterState);\n  const filterItems = useAtomValue(filteredTodoListState);\n  const todoItemsWithReactQuery = useAtomValue<TodoItem[]>(\n    fetchAsyncJotaiWithReactQueryTodoAction\n  );\n\n  const fetchTodoAction = useUpdateAtom(fetchAsyncTodoAction);\n  const [, createTodoAction] = useAtom(createAsyncTodoAction);\n  const [, updateTodoAction] = useAtom(updateAsyncTodoAction);\n  const [, deleteTodoAction] = useAtom(deleteAsyncTodoAction);\n\n  const todoLength = useAtom<number>(todoItemLengthState);\n\n  const [fetchNumber, setFetchNumber] = useState(1);\n  const [updateNumber, setUpdateNumber] = useState(1);\n  const [deleteNumber, setDeleteNumber] = useState(1);\n\n  useEffect(() => {\n    switch (filter) {\n      case FETCH_TODOS:\n      case FETCH_TODO:\n        setTodoItemAtom((prev) => ({\n          ...prev,\n          data: filterItems,\n        }));\n        break;\n      case CREATE_TODO:\n        setTodoItemAtom((prev) => ({\n          ...prev,\n          data: [...prev.data, ...filterItems],\n        }));\n        break;\n      case UPDATE_TODO:\n        setTodoItemAtom((prev) => ({\n          ...prev,\n          data: prev.data.map((todo) =>\n            todo.id !== filterItems.id ? todo : filterItems.data\n          ),\n        }));\n        break;\n      case DELETE_TODO:\n        setTodoItemAtom((prev) => ({\n          ...prev,\n          data: prev.data.filter((item) => item.id !== filterItems),\n        }));\n        break;\n    }\n  }, [filter, filterItems, setTodoItemAtom]);\n\n  const handleFetchTodosAction = (\n    event: React.MouseEvent<HTMLButtonElement>\n  ) => {\n    setTodoFilter(\"FETCH_TODOS\");\n  };\n\n  const handleFetchTodoAction = (\n    event: React.MouseEvent<HTMLButtonElement>\n  ) => {\n    fetchTodoAction(fetchNumber);\n    setTodoFilter(\"FETCH_TODO\");\n  };\n\n  const handleCreateTodoAction = (\n    event: React.MouseEvent<HTMLButtonElement>\n  ) => {\n    createTodoAction({\n      userId: 2,\n      title: \"create\",\n      completed: false,\n    });\n    setTodoFilter(\"CREATE_TODO\");\n  };\n\n  const handleUpdateTodoAction = (\n    event: React.MouseEvent<HTMLButtonElement>\n  ) => {\n    updateTodoAction({\n      id: updateNumber,\n      todoItem: {\n        id: updateNumber,\n        userId: updateNumber,\n        title: \"update\",\n        completed: false,\n      },\n    });\n    setTodoFilter(\"UPDATE_TODO\");\n  };\n\n  const handleDeleteTodoAction = (\n    event: React.MouseEvent<HTMLButtonElement>\n  ) => {\n    deleteTodoAction(deleteNumber);\n    setTodoFilter(\"DELETE_TODO\");\n  };\n\n  const onFetchChange = useCallback(\n    (e: React.ChangeEvent<HTMLInputElement>) => {\n      const { target } = e;\n      setFetchNumber(Number(target.value));\n    },\n    []\n  );\n\n  const onUpdateChange = useCallback(\n    (e: React.ChangeEvent<HTMLInputElement>) => {\n      const { target } = e;\n      setUpdateNumber(Number(target.value));\n    },\n    []\n  );\n\n  const onDeleteChange = useCallback(\n    (e: React.ChangeEvent<HTMLInputElement>) => {\n      const { target } = e;\n      setDeleteNumber(Number(target.value));\n    },\n    []\n  );\n\n  return (\n    <>\n      <div>길이: {todoLength}</div>\n      <div>\n        <button\n          style={{ background: \"#e7f9f9\" }}\n          onClick={handleFetchTodosAction}\n        >\n          Todos All Loading\n        </button>\n      </div>\n      <hr\n        style={{\n          margin: \"3px\",\n          border: \"1px solid black\",\n        }}\n      />\n      <label>Todo Fetch : </label>\n      <input type=\"number\" value={fetchNumber} onChange={onFetchChange} />\n      <div>\n        <button\n          style={{ background: \"#e7f9f9\" }}\n          onClick={handleFetchTodoAction}\n        >\n          Todo Loading\n        </button>\n      </div>\n      <hr\n        style={{\n          margin: \"3px\",\n          border: \"1px solid black\",\n        }}\n      />\n      <div>\n        <button\n          style={{ background: \"#e7f9f9\" }}\n          onClick={handleCreateTodoAction}\n        >\n          Create Todo\n        </button>\n      </div>\n      <hr\n        style={{\n          margin: \"3px\",\n          border: \"1px solid black\",\n        }}\n      />\n      <label>Todo Update : </label>\n      <input type=\"number\" value={updateNumber} onChange={onUpdateChange} />\n      <div>\n        <button\n          style={{ background: \"#e7f9f9\" }}\n          onClick={handleUpdateTodoAction}\n        >\n          Update Todo\n        </button>\n      </div>\n      <hr\n        style={{\n          margin: \"3px\",\n          border: \"1px solid black\",\n        }}\n      />\n      <label>Todo Delete : </label>\n      <input type=\"number\" value={deleteNumber} onChange={onDeleteChange} />\n      <div>\n        <button\n          style={{ background: \"#e7f9f9\" }}\n          onClick={handleDeleteTodoAction}\n        >\n          Delete Todo\n        </button>\n      </div>\n      {todoItems &&\n        todoItems.map((todo) => (\n          <TodosContentItemComponent\n            key={todo.id}\n            id={todo.id}\n            userId={todo.userId}\n            title={todo.title}\n            completed={todo.completed}\n          />\n        ))}\n      <hr\n        style={{\n          margin: \"3px\",\n          border: \"1px solid black\",\n        }}\n      />\n      {todoItemsWithReactQuery &&\n        todoItemsWithReactQuery.map((todo) => (\n          <TodosContentItemComponent\n            key={todo.id}\n            id={todo.id}\n            userId={todo.userId}\n            title={todo.title}\n            completed={todo.completed}\n          />\n        ))}\n    </>\n  );\n};\n\nexport default TodoContentContainer;\n","import React, { Suspense } from \"react\";\nimport { ErrorBoundary } from \"react-error-boundary\";\nimport ReactLoading from \"react-loading\";\nimport TodoContentContainer from \"./TodoContentContainer\";\n\ninterface FallbackProps {\n  error: Error;\n  resetErrorBoundary: (...args: Array<unknown>) => void;\n}\n\nconst ErrorFallback = ({ error, resetErrorBoundary }: FallbackProps) => {\n  return (\n    <div role=\"alert\">\n      <p>Something went wrong:</p>\n      <pre>{error.message}</pre>\n      <button onClick={resetErrorBoundary}>Try again</button>\n    </div>\n  );\n};\n\nfunction RootContainer() {\n  return (\n    <ErrorBoundary FallbackComponent={ErrorFallback}>\n      <Suspense\n        fallback={<ReactLoading color={\"#00b2b2\"} height={50} width={50} />}\n      >\n        <TodoContentContainer />\n      </Suspense>\n    </ErrorBoundary>\n  );\n}\n\nexport default RootContainer;\n","import React from \"react\";\nimport { NavLink, Route, Switch, Redirect } from \"react-router-dom\";\nimport ReduxToolKitContainer from \"../src/reduxToolkit/containers/RootContainer\";\nimport RecoilContainer from \"../src/recoil/containers/RootContainer\";\nimport ReactQueryContainer from \"../src/react-query/containers/RootContainer\";\nimport SWRContainer from \"../src/swr/containers/RootContainer\";\nimport ReduxContainer from \"../src/redux/containers/RootContainer\";\nimport MobxContainer from \"../src/mobx/containers/RootContainer\";\nimport JotaiContainer from \"../src/jotai/containers/RootContainer\";\n\nimport \"./App.css\";\n\nfunction App() {\n  return (\n    <div className=\"container\">\n      <div className=\"nav\">\n        <div>\n          <NavLink to=\"reduxToolkit\">redux-toolkit</NavLink>\n        </div>\n        <div>\n          <NavLink to=\"redux\">redux</NavLink>\n        </div>\n        <div>\n          <NavLink to=\"mobx\">mobx</NavLink>\n        </div>\n        <div>\n          <NavLink to=\"recoil\">recoil</NavLink>\n        </div>\n        <div>\n          <NavLink to=\"react-query\">react-query</NavLink>\n        </div>\n        <div>\n          <NavLink to=\"swr\">swr</NavLink>\n        </div>\n        <div>\n          <NavLink to=\"jotai\">jotai</NavLink>\n        </div>\n      </div>\n      <div className=\"content\">\n        <Switch>\n          <Route path=\"/reduxToolkit\" component={ReduxToolKitContainer} />\n          <Route path=\"/redux\" component={ReduxContainer} />\n          <Route path=\"/mobx\" component={MobxContainer} />\n          <Route path=\"/recoil\" component={RecoilContainer} />\n          <Route path=\"/react-query\" component={ReactQueryContainer} />\n          <Route path=\"/swr\" component={SWRContainer} />\n          <Route path=\"/jotai\" component={JotaiContainer} />\n          <Redirect from=\"/\" to=\"/reduxToolkit\" />\n        </Switch>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}